[{"/home/shardul/Documents/weather-app/src/index.js":"1","/home/shardul/Documents/weather-app/src/App.js":"2","/home/shardul/Documents/weather-app/src/components/WeatherDetail.jsx":"3","/home/shardul/Documents/weather-app/src/components/Weather.jsx":"4","/home/shardul/Documents/weather-app/src/styles/GlobalStyle.js":"5","/home/shardul/Documents/weather-app/src/components/Header.jsx":"6","/home/shardul/Documents/weather-app/src/services/GetWeatherDetail.js":"7","/home/shardul/Documents/weather-app/src/components/LineChart.jsx":"8","/home/shardul/Documents/weather-app/src/components/WeeklyWeather.jsx":"9","/home/shardul/Documents/weather-app/src/components/DayChart.jsx":"10"},{"size":471,"mtime":1611317837837,"results":"11","hashOfConfig":"12"},{"size":2164,"mtime":1614881288395,"results":"13","hashOfConfig":"12"},{"size":1689,"mtime":1613891396559,"results":"14","hashOfConfig":"12"},{"size":1813,"mtime":1613929169552,"results":"15","hashOfConfig":"12"},{"size":251,"mtime":1611319961579,"results":"16","hashOfConfig":"12"},{"size":4465,"mtime":1614881502143,"results":"17","hashOfConfig":"12"},{"size":131,"mtime":1611334154713,"results":"18","hashOfConfig":"19"},{"size":2493,"mtime":1614680444511,"results":"20","hashOfConfig":"12"},{"size":629,"mtime":1613921306505,"results":"21","hashOfConfig":"12"},{"size":1169,"mtime":1614877697780,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1dzxxc7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ylu2pi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shardul/Documents/weather-app/src/index.js",[],["48","49"],"/home/shardul/Documents/weather-app/src/App.js",["50","51"],"/home/shardul/Documents/weather-app/src/components/WeatherDetail.jsx",["52","53"],"import styled from 'styled-components';\nimport { Icon } from './Weather';\nimport sun from '../assets/sun.svg';\nimport rain from '../assets/rain.svg';\nimport cloudy from '../assets/cloudy.svg';\nimport LineChart from './LineChart';\n\nconst Container = styled.div`\n\tmargin: 30px auto;\n\tborder-radius: 6px;\n\tmargin-bottom: 100px;\n\tbox-shadow: 0 0 8px 0px rgba(0, 0, 0, 0.3);\n`;\nconst Temp = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`;\nconst H1 = styled.span`\n\tfont-size: 6rem;\n\tfont-weight: bolder;\n\tpadding: 20px 0;\n`;\nconst Text = styled.div`\n\tfont-size: clamp(1.7rem, 2vw, 2.2rem);\n\tline-height: 1.3;\n\tfont-weight: 800;\n`;\nconst Data = styled.div`\n\tfont-size: clamp(1.6rem, 2vw, 2rem);\n\tline-height: 1.5;\n`;\nconst TextContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 10px 40px 10px 20px;\n\tmargin: 10px;\n\tbackground-color: #e7f4f7;\n`;\nconst AttrContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\nconst WeatherDetail = (props) => {\n\tconst { collection } = props;\n\treturn (\n\t\t<Container>\n\t\t\t<Temp>\n\t\t\t\t<H1>{`${Math.round(collection.temp)}`}&deg;C</H1>\n\t\t\t\t{collection.currweather == 'Clear' ? (\n\t\t\t\t\t<Icon detail src={sun} />\n\t\t\t\t) : collection.currweather == 'Clouds' ? (\n\t\t\t\t\t<Icon detail src={cloudy} />\n\t\t\t\t) : (\n\t\t\t\t\t<Icon detail src={rain} />\n\t\t\t\t)}\n\t\t\t</Temp>\n\t\t\t<LineChart collection={collection} />\n\t\t\t<AttrContainer>\n\t\t\t\t<TextContainer>\n\t\t\t\t\t<Text>Pressure</Text>\n\t\t\t\t\t<Data>{`${collection.pressure} hpa`}</Data>\n\t\t\t\t</TextContainer>\n\t\t\t\t<TextContainer>\n\t\t\t\t\t<Text>Humidity</Text>\n\t\t\t\t\t<Data>{`${collection.humidity} %`}</Data>\n\t\t\t\t</TextContainer>\n\t\t\t</AttrContainer>\n\t\t</Container>\n\t);\n};\nexport default WeatherDetail;\n","/home/shardul/Documents/weather-app/src/components/Weather.jsx",["54","55"],"import styled, { css } from 'styled-components';\nimport sun from '../assets/sun.svg';\nimport cloudy from '../assets/cloudy.svg';\nimport rain from '../assets/rain.svg';\n\nconst Container = styled.div`\n\tpadding: 10px 14px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twhite-space: nowrap;\n\tmargin: 2px;\n\t${(props) =>\n\t\tprops.active &&\n\t\tcss`\n\t\t\tbackground-color: #fffeef;\n\t\t\tborder: 2px solid #48aeed;\n\t\t`}\n`;\nconst Day = styled.div`\n\tfont-size: 2rem;\n\tpadding: 2px;\n`;\nexport const Temp = styled.div`\n\tpadding: 2px;\n\tfont-size: 1.5rem;\n\tcolor: black;\n`;\nexport const Condition = styled.div`\n\tfont-size: 1.3rem;\n\tdisplay: flex;\n\tpadding: 2px;\n\tflex-direction: column;\n\talign-items: center;\n`;\nexport const Icon = styled.img`\n\tpadding: 2px;\n\theight: 40px;\n\t${(props) =>\n\t\tprops.detail &&\n\t\tcss`\n\t\t\theight: 80px;\n\t\t\tmargin: 20px 0;\n\t\t`}\n\t${(props) =>\n\t\tprops.header &&\n\t\tcss`\n\t\t\tpadding: 0;\n\t\t\theight: 45px;\n\t\t\tmargin-left: 10px;\n\t\t`}\n`;\nconst day = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst Weather = (props) => {\n\tconst { dt, temp, weather } = props.day;\n\tconst { index, setSelected, active } = props;\n\treturn (\n\t\t<Container\n\t\t\tactive={active}\n\t\t\tonClick={() => {\n\t\t\t\tsetSelected(index);\n\t\t\t}}>\n\t\t\t<Day>{day[new Date(dt * 1000).getDay()]}</Day>\n\t\t\t<Temp>\n\t\t\t\t{Math.round(temp.day)}&deg;\n\t\t\t\t<span style={{ fontWeight: 'lighter', color: '#4F4E4B ' }}>\n\t\t\t\t\t{Math.round(temp.night)}&deg;\n\t\t\t\t</span>\n\t\t\t</Temp>\n\t\t\t<>\n\t\t\t\t{weather[0].main == 'Clear' ? (\n\t\t\t\t\t<Condition>\n\t\t\t\t\t\t<Icon src={sun} />\n\t\t\t\t\t\tSunny\n\t\t\t\t\t</Condition>\n\t\t\t\t) : weather[0].main == 'Clouds' ? (\n\t\t\t\t\t<Condition>\n\t\t\t\t\t\t<Icon src={cloudy} />\n\t\t\t\t\t\tCloudy\n\t\t\t\t\t</Condition>\n\t\t\t\t) : (\n\t\t\t\t\t<Condition>\n\t\t\t\t\t\t<Icon src={rain} />\n\t\t\t\t\t\tRainy\n\t\t\t\t\t</Condition>\n\t\t\t\t)}\n\t\t\t</>\n\t\t</Container>\n\t);\n};\nexport default Weather;\n","/home/shardul/Documents/weather-app/src/styles/GlobalStyle.js",[],"/home/shardul/Documents/weather-app/src/components/Header.jsx",["56","57","58"],"/home/shardul/Documents/weather-app/src/services/GetWeatherDetail.js",[],["59","60"],"/home/shardul/Documents/weather-app/src/components/LineChart.jsx",["61"],"import styled from 'styled-components';\nimport { Line } from 'react-chartjs-2';\n\n//** Take a look how you made a chart scrollable in a block\n\nconst Container = styled.div`\n\theight: 22vh;\n\twidth: 2700px;\n\tmargin-bottom: 10px;\n`;\nconst Chart = styled(Line)`\n\tposition: absolute;\n`;\nconst Main = styled.div`\n\tposition: relative;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n\toverflow-x: scroll;\n`;\nconst LineChart = (props) => {\n\tconst data = (canvas) => {\n\t\t// const ctx = canvas.getContext('2d');\n\t\t// var width = window.innerWidth || document.body.clientWidth;\n\n\t\t// const gradient = ctx.createLinearGradient(0, 0, width, 170);\n\t\t// gradient.addColorStop(0, 'rgba(223, 245, 253,.9)');\n\t\t// // gradient.addColorStop(0.45, 'white');\n\t\t// gradient.addColorStop(1, 'white');\n\t\t// ctx.fillStyle = gradient;\n\t\t// // ctx.fillRect(20, 20, 150, 100);\n\n\t\t// // ctx.fillStyle = gradient;\n\t\t// // ctx.fillRect(20, 20, 10, 10);\n\t\t// // gradient.addColorStop(0.4, 'rgb(255, 255, 255)');\n\t\t// // gradient.addColorStop(0.4, 'rgb(255, 255, 255)');\n\t\treturn {\n\t\t\tlabels: props.collection.labels,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: props.collection.newData,\n\t\t\t\t\tfill: false,\n\t\t\t\t\t// backgroundColor: gradient,\n\t\t\t\t\tpointBackgroundColor: 'rgba(250,250,250)',\n\t\t\t\t\tpointHoverBackgroundColor: 'rgba(250,250,250)',\n\t\t\t\t\tborderColor: '#069ad4',\n\t\t\t\t\tpointHoverBorderWidth: 1.8,\n\t\t\t\t\tborderWidth: 1.8,\n\t\t\t\t\tpointHoverRadius: 4,\n\t\t\t\t\tpointRadius: 4,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\tconst options = {\n\t\tresponsive: true,\n\t\tlayout: {\n\t\t\tpadding: {\n\t\t\t\tbottom: 10,\n\t\t\t},\n\t\t},\n\t\tplugins: [\n\t\t\t{\n\t\t\t\tafterDraw: (chart) => {\n\t\t\t\t\tvar ctx = chart.chart.ctx;\n\t\t\t\t\tconsole.log(ctx);\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tmaintainAspectRatio: false,\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\tscales: {\n\t\t\tyAxes: [\n\t\t\t\t{\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\txAxes: [\n\t\t\t\t{\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tlineWidth: 1.8,\n\t\t\t\t\t\tzeroLineWidth: 1.8,\n\t\t\t\t\t\tzeroLineColor: 'rgba(0,0,0,.3)',\n\t\t\t\t\t\tcolor: 'rgba(0,0,0,.3)',\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\t// fontColor: 'black',\n\t\t\t\t\t\t// fontSize: 15,\n\t\t\t\t\t\t// padding: 5,\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\tfontColor: 'rgb(0,0,0)',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\ttooltips: {\n\t\t\tenabled: false,\n\t\t},\n\t\tlayout: {\n\t\t\tpadding: {\n\t\t\t\ttop: 10,\n\t\t\t\tright: 40,\n\t\t\t\tleft: 10,\n\t\t\t},\n\t\t},\n\t};\n\treturn (\n\t\t<Main>\n\t\t\t<Container>\n\t\t\t\t<Chart data={data} options={options} />\n\t\t\t</Container>\n\t\t</Main>\n\t);\n};\nexport default LineChart;\n","/home/shardul/Documents/weather-app/src/components/WeeklyWeather.jsx",[],"/home/shardul/Documents/weather-app/src/components/DayChart.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":19,"column":8,"nodeType":"68","messageId":"69","endLine":19,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":20,"column":8,"nodeType":"68","messageId":"69","endLine":20,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":49,"column":29,"nodeType":"73","messageId":"74","endLine":49,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":51,"column":32,"nodeType":"73","messageId":"74","endLine":51,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":71,"column":22,"nodeType":"73","messageId":"74","endLine":71,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":76,"column":25,"nodeType":"73","messageId":"74","endLine":76,"endColumn":27},{"ruleId":"66","severity":1,"message":"75","line":18,"column":7,"nodeType":"68","messageId":"69","endLine":18,"endColumn":12},{"ruleId":"71","severity":1,"message":"72","line":146,"column":30,"nodeType":"73","messageId":"74","endLine":146,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":150,"column":33,"nodeType":"73","messageId":"74","endLine":150,"endColumn":35},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":109,"column":3,"nodeType":"80","messageId":"74","endLine":109,"endColumn":9},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'risetime' is assigned a value but never used.","Identifier","unusedVar","'settime' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Error' is assigned a value but never used.",["81"],["82"],"no-dupe-keys","Duplicate key 'layout'.","ObjectExpression","no-global-assign","no-unsafe-negation"]